// Generated by bulloak

/// Context for test conditions
#[derive(Default)]
struct TestContext {}
/// Helper: when a is even
fn a_is_even(mut ctx: TestContext) -> TestContext {
    ctx
}
/// Helper: given zero
fn zero(mut ctx: TestContext) -> TestContext {
    ctx
}
/// Helper: given not zero
fn not_zero(mut ctx: TestContext) -> TestContext {
    ctx
}
/// Helper: when b is even
fn b_is_even(mut ctx: TestContext) -> TestContext {
    ctx
}
#[cfg(test)]
mod tests {
    use super::*;
    #[test]
    #[should_panic]
    fn test_when_zero() {
        let _ctx = zero(a_is_even(TestContext::default()));
        // it should revert
    }
    #[test]
    fn test_when_not_zero() {
        let _ctx = not_zero(a_is_even(TestContext::default()));
        // it should work
    }
    #[test]
    #[should_panic]
    fn test_when_zero() {
        let _ctx = zero(b_is_even(TestContext::default()));
    }
    #[test]
    fn test_when_not_zero() {
        let _ctx = not_zero(b_is_even(TestContext::default()));
    }
}

